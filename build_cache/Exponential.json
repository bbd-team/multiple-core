{
  "abi": [],
  "evm": {
    "bytecode": {
      "linkReferences": {},
      "object": "6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a723158206201bbc5f9b8f18db056a03f2c2df914cb12770e454c6bcee2808bc69c536c9164736f6c63430005110032",
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH3 0x1BBC5 0xF9 0xB8 CALL DUP14 0xB0 JUMP LOG0 EXTCODEHASH 0x2C 0x2D 0xF9 EQ 0xCB SLT PUSH24 0xE454C6BCEE2808BC69C536C9164736F6C63430005110032 ",
      "sourceMap": "514:6460:24:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;514:6460:24;;;;;;;"
    },
    "deployedBytecode": {
      "linkReferences": {},
      "object": "6080604052600080fdfea265627a7a723158206201bbc5f9b8f18db056a03f2c2df914cb12770e454c6bcee2808bc69c536c9164736f6c63430005110032",
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH3 0x1BBC5 0xF9 0xB8 CALL DUP14 0xB0 JUMP LOG0 EXTCODEHASH 0x2C 0x2D 0xF9 EQ 0xCB SLT PUSH24 0xE454C6BCEE2808BC69C536C9164736F6C63430005110032 ",
      "sourceMap": "514:6460:24:-;;;;;"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Compound\",\"details\":\"Legacy contract for compatibility reasons with existing contracts that still use MathError\",\"methods\":{},\"title\":\"Exponential module for storing fixed-precision decimals\"},\"userdoc\":{\"methods\":{},\"notice\":\"Exp is a struct which stores decimals with a fixed precision of 18 decimal places.        Thus, if we wanted to store the 5.1, mantissa would store 5.1e18. That is:        `Exp({mantissa: 5100000000000000000})`.\"}},\"settings\":{\"compilationTarget\":{\"contracts/compound/Exponential.sol\":\"Exponential\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/compound/CarefulMath.sol\":{\"keccak256\":\"0x0647348f27e41d22555d99eebd217dee02a4d737df6accd7cce5347a7487c7de\",\"urls\":[\"bzz-raw://08882d26c11a6d240949a5afba79a74694a8b651093c05c5ae4cc359a0181c22\",\"dweb:/ipfs/QmVXb1tDswuhMRNuDLajzohdkvx2kBmqu1Rxn1BAKUfhkV\"]},\"contracts/compound/Exponential.sol\":{\"keccak256\":\"0x6ff054d65a0289dbb43c9f437d6909f9cf1207c9b8f984b3cb8e97a9de76a434\",\"urls\":[\"bzz-raw://2e0ccc4b6f730a11021ea1532a93b2208fbe8a69ab910a04d675839e8b15d46d\",\"dweb:/ipfs/QmNTXA1huhPwFtQHPeQqn9H9tbTdmFXZACaEAzEPQDcWa6\"]},\"contracts/compound/ExponentialNoError.sol\":{\"keccak256\":\"0x7cb184b7cee71a5e707053dfba7eebbd46f11974004028100510ccce19b6694d\",\"urls\":[\"bzz-raw://63f0452c7f317ac3eab83456076701025374dec7c2ead5e890ebc09d760bd9d3\",\"dweb:/ipfs/QmfNuHEXCoaVYk8qwGnAy4iwubQoEq6HV1svzwHRGqBb2V\"]}},\"version\":1}",
  "bytecode": "6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a723158206201bbc5f9b8f18db056a03f2c2df914cb12770e454c6bcee2808bc69c536c9164736f6c63430005110032",
  "humanReadableAbi": []
}